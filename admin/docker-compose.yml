version: '3.8'

services:
  # MySQL 데이터베이스
  db:
    image: mysql:8.0
    container_name: myunsejeomju_admin_db
    environment:
      MYSQL_DATABASE: ${DB_NAME:-myunsejeomju_admin}
      MYSQL_USER: ${DB_USER:-admin}
      MYSQL_PASSWORD: ${DB_PASSWORD:-password}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-rootpassword}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./db/init:/docker-entrypoint-initdb.d
    ports:
      - "${DB_PORT:-3306}:3306"
    networks:
      - admin_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Django 웹 애플리케이션
  web:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: myunsejeomju_admin_web
    environment:
      - DB_ENGINE=django.db.backends.mysql
      - DB_NAME=${DB_NAME:-myunsejeomju_admin}
      - DB_USER=${DB_USER:-admin}
      - DB_PASSWORD=${DB_PASSWORD:-password}
      - DB_HOST=db
      - DB_PORT=3306
      - DEBUG=${DEBUG:-False}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-in-production}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1}
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "${WEB_PORT:-8000}:8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - admin_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/login/"]
      timeout: 10s
      retries: 5
      start_period: 30s

  # Nginx (프로덕션용)
  nginx:
    image: nginx:alpine
    container_name: myunsejeomju_admin_nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/app/staticfiles:ro
      - media_volume:/app/media:ro
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    depends_on:
      - web
    networks:
      - admin_network
    restart: unless-stopped
    profiles:
      - production

volumes:
  mysql_data:
    driver: local
  static_volume:
    driver: local
  media_volume:
    driver: local

networks:
  admin_network:
    driver: bridge