{"ast":null,"code":"const API_BASE_URL = 'http://localhost:8000/api';\nclass ApiService {\n  async request(endpoint, options) {\n    const response = await fetch(`${API_BASE_URL}${endpoint}`, {\n      headers: {\n        'Content-Type': 'application/json',\n        ...(options === null || options === void 0 ? void 0 : options.headers)\n      },\n      ...options\n    });\n    if (!response.ok) {\n      throw new Error(`API Error: ${response.status}`);\n    }\n    return response.json();\n  }\n\n  // Food APIs\n  async getFoods() {\n    return this.request('/foods/');\n  }\n  async getFoodById(id) {\n    return this.request(`/foods/${id}/`);\n  }\n  async createFood(food) {\n    return this.request('/foods/', {\n      method: 'POST',\n      body: JSON.stringify(food)\n    });\n  }\n  async updateFood(id, food) {\n    return this.request(`/foods/${id}/`, {\n      method: 'PATCH',\n      body: JSON.stringify(food)\n    });\n  }\n  async deleteFood(id) {\n    await this.request(`/foods/${id}/`, {\n      method: 'DELETE'\n    });\n  }\n\n  // Order APIs\n  async getOrders() {\n    return this.request('/orders/history/');\n  }\n  async getOrdersByTable(tableId) {\n    return this.request(`/tables/${tableId}/orders/`);\n  }\n\n  // Table APIs\n  async getTables() {\n    return this.request('/tables/');\n  }\n}\nexport const apiService = new ApiService();","map":{"version":3,"names":["API_BASE_URL","ApiService","request","endpoint","options","response","fetch","headers","ok","Error","status","json","getFoods","getFoodById","id","createFood","food","method","body","JSON","stringify","updateFood","deleteFood","getOrders","getOrdersByTable","tableId","getTables","apiService"],"sources":["/Users/leegyurak/개발/숭실대축제/admin/src/services/api.ts"],"sourcesContent":["import { Food, CreateFoodRequest, UpdateFoodRequest } from '../types/food';\nimport { Order } from '../types/order';\nimport { Table } from '../types/table';\n\nconst API_BASE_URL = 'http://localhost:8000/api';\n\nclass ApiService {\n  private async request<T>(endpoint: string, options?: RequestInit): Promise<T> {\n    const response = await fetch(`${API_BASE_URL}${endpoint}`, {\n      headers: {\n        'Content-Type': 'application/json',\n        ...options?.headers,\n      },\n      ...options,\n    });\n\n    if (!response.ok) {\n      throw new Error(`API Error: ${response.status}`);\n    }\n\n    return response.json();\n  }\n\n  // Food APIs\n  async getFoods(): Promise<Food[]> {\n    return this.request<Food[]>('/foods/');\n  }\n\n  async getFoodById(id: number): Promise<Food> {\n    return this.request<Food>(`/foods/${id}/`);\n  }\n\n  async createFood(food: CreateFoodRequest): Promise<Food> {\n    return this.request<Food>('/foods/', {\n      method: 'POST',\n      body: JSON.stringify(food),\n    });\n  }\n\n  async updateFood(id: number, food: UpdateFoodRequest): Promise<Food> {\n    return this.request<Food>(`/foods/${id}/`, {\n      method: 'PATCH',\n      body: JSON.stringify(food),\n    });\n  }\n\n  async deleteFood(id: number): Promise<void> {\n    await this.request(`/foods/${id}/`, {\n      method: 'DELETE',\n    });\n  }\n\n  // Order APIs\n  async getOrders(): Promise<Order[]> {\n    return this.request<Order[]>('/orders/history/');\n  }\n\n  async getOrdersByTable(tableId: string): Promise<Order[]> {\n    return this.request<Order[]>(`/tables/${tableId}/orders/`);\n  }\n\n  // Table APIs\n  async getTables(): Promise<Table[]> {\n    return this.request<Table[]>('/tables/');\n  }\n}\n\nexport const apiService = new ApiService();"],"mappings":"AAIA,MAAMA,YAAY,GAAG,2BAA2B;AAEhD,MAAMC,UAAU,CAAC;EACf,MAAcC,OAAOA,CAAIC,QAAgB,EAAEC,OAAqB,EAAc;IAC5E,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGN,YAAY,GAAGG,QAAQ,EAAE,EAAE;MACzDI,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,IAAGH,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEG,OAAO;MACrB,CAAC;MACD,GAAGH;IACL,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACG,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,cAAcJ,QAAQ,CAACK,MAAM,EAAE,CAAC;IAClD;IAEA,OAAOL,QAAQ,CAACM,IAAI,CAAC,CAAC;EACxB;;EAEA;EACA,MAAMC,QAAQA,CAAA,EAAoB;IAChC,OAAO,IAAI,CAACV,OAAO,CAAS,SAAS,CAAC;EACxC;EAEA,MAAMW,WAAWA,CAACC,EAAU,EAAiB;IAC3C,OAAO,IAAI,CAACZ,OAAO,CAAO,UAAUY,EAAE,GAAG,CAAC;EAC5C;EAEA,MAAMC,UAAUA,CAACC,IAAuB,EAAiB;IACvD,OAAO,IAAI,CAACd,OAAO,CAAO,SAAS,EAAE;MACnCe,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI;IAC3B,CAAC,CAAC;EACJ;EAEA,MAAMK,UAAUA,CAACP,EAAU,EAAEE,IAAuB,EAAiB;IACnE,OAAO,IAAI,CAACd,OAAO,CAAO,UAAUY,EAAE,GAAG,EAAE;MACzCG,MAAM,EAAE,OAAO;MACfC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI;IAC3B,CAAC,CAAC;EACJ;EAEA,MAAMM,UAAUA,CAACR,EAAU,EAAiB;IAC1C,MAAM,IAAI,CAACZ,OAAO,CAAC,UAAUY,EAAE,GAAG,EAAE;MAClCG,MAAM,EAAE;IACV,CAAC,CAAC;EACJ;;EAEA;EACA,MAAMM,SAASA,CAAA,EAAqB;IAClC,OAAO,IAAI,CAACrB,OAAO,CAAU,kBAAkB,CAAC;EAClD;EAEA,MAAMsB,gBAAgBA,CAACC,OAAe,EAAoB;IACxD,OAAO,IAAI,CAACvB,OAAO,CAAU,WAAWuB,OAAO,UAAU,CAAC;EAC5D;;EAEA;EACA,MAAMC,SAASA,CAAA,EAAqB;IAClC,OAAO,IAAI,CAACxB,OAAO,CAAU,UAAU,CAAC;EAC1C;AACF;AAEA,OAAO,MAAMyB,UAAU,GAAG,IAAI1B,UAAU,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}