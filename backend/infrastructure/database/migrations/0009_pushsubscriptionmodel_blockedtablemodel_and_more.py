# Generated by Django 5.2.4 on 2025-07-30 12:53

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('database', '0008_ordermodel_discord_notified'),
    ]

    operations = [
        migrations.CreateModel(
            name='PushSubscriptionModel',
            fields=[
                ('table_id', models.CharField(max_length=50, primary_key=True, serialize=False, verbose_name='테이블 ID')),
                ('endpoint', models.TextField(verbose_name='푸시 엔드포인트')),
                ('p256dh_key', models.CharField(max_length=255, verbose_name='P256DH 키')),
                ('auth_key', models.CharField(max_length=255, verbose_name='인증 키')),
                ('is_active', models.BooleanField(default=True, verbose_name='활성 상태')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일시')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일시')),
            ],
            options={
                'verbose_name': '푸시 구독',
                'verbose_name_plural': '푸시 구독들',
                'db_table': 'push_subscriptions',
            },
        ),
        migrations.CreateModel(
            name='BlockedTableModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blocker_table_id', models.CharField(max_length=50, verbose_name='차단한 테이블 ID')),
                ('blocked_table_id', models.CharField(max_length=50, verbose_name='차단된 테이블 ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='차단일시')),
            ],
            options={
                'verbose_name': '차단된 테이블',
                'verbose_name_plural': '차단된 테이블들',
                'db_table': 'blocked_tables',
                'indexes': [models.Index(fields=['blocker_table_id'], name='idx_blocker')],
                'unique_together': {('blocker_table_id', 'blocked_table_id')},
            },
        ),
        migrations.CreateModel(
            name='ConversationModel',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='대화 ID')),
                ('table1_id', models.CharField(db_index=True, max_length=50, verbose_name='테이블1 ID')),
                ('table2_id', models.CharField(db_index=True, max_length=50, verbose_name='테이블2 ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일시')),
                ('last_message_at', models.DateTimeField(blank=True, null=True, verbose_name='마지막 메시지 시각')),
            ],
            options={
                'verbose_name': '대화',
                'verbose_name_plural': '대화들',
                'db_table': 'conversations',
                'indexes': [models.Index(fields=['table1_id', 'table2_id'], name='idx_table_ids')],
            },
        ),
        migrations.CreateModel(
            name='MessageModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_table_id', models.CharField(db_index=True, max_length=50, verbose_name='발신 테이블 ID')),
                ('to_table_id', models.CharField(db_index=True, max_length=50, verbose_name='수신 테이블 ID')),
                ('content', models.TextField(verbose_name='메시지 내용')),
                ('timestamp', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='전송 시각')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='삭제 여부')),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.conversationmodel', verbose_name='대화')),
            ],
            options={
                'verbose_name': '메시지',
                'verbose_name_plural': '메시지들',
                'db_table': 'messages',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['conversation', 'timestamp'], name='idx_conversation_timestamp'), models.Index(fields=['from_table_id', 'to_table_id', 'timestamp'], name='idx_table_timestamp')],
            },
        ),
    ]
